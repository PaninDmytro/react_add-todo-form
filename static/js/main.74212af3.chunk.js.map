{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","usersFromServer","find","todosWithUsers","userId","App","useState","setTodo","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","todosForId","newTodo","Math","max","currentTodo","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74212af3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/todo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoWithUser } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './types/todo';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodo] = useState(todosWithUsers);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  function getNewTodoId(todosForId: TodoWithUser[]) {\n    const maxId = Math.max(...todosForId.map(todo => todo.id));\n\n    return maxId + 1;\n  }\n\n  function handleSetTitle(event: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(event.target.value);\n    if (!event.target.value) {\n      setTitleError(true);\n\n      return;\n    }\n\n    setTitleError(false);\n  }\n\n  function handleSetUser(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserId(+event.target.value);\n\n    if (+event.target.value === 0) {\n      setUserIdError(true);\n\n      return;\n    }\n\n    setUserIdError(false);\n  }\n\n  function reset() {\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserIdError(false);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      user: getUserById(userId),\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodo(currentTodo => [...currentTodo, newTodo]);\n\n    reset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:&nbsp;</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={handleSetTitle}\n          />\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:&nbsp;</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleSetUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user?.id}\n                key={user?.id}\n              >\n                {user?.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}